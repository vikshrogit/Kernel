<?php
/*
 * *************************************************************************
 *   Copyright (C) VIKSHRO 2017 - 2023, Inc - All Rights Reserved
 *
 *  VIKSHRO and Developer (@vikukumar) Have All Copyright For this File. Removing or
 *  Adding any content will be required permission to use for Commercial puporse.
 *  @application      RAMPHPCLI
 *  @author           VIKSHRO
 *  @site             https://vikshro.in
 *  @date             20/08/23, 12:40 am
 *
 */

namespace Ramphp\Kernel\Framework\Database;

use mysqli_result;
use Ramphp\Kernel\Framework\Config;

class Mysql extends \mysqli
{
    private ?string $HOST = null;
    private ?int $PORT = null;
    private ?string $USER = null;
    private ?string $PASS = null;
    public ?string $Name = null;

    private mixed $config= null;
    public function __construct(?string $hostname = null, ?string $username = null, ?string $password = null, ?string $database = null, ?int $port = null, ?string $socket = null)
    {

        $this->loadConfig($hostname, $username, $password, $database, $port);
        return parent::__construct($this->HOST, $this->USER, $this->PASS, $this->Name, $this->PORT, $socket);
    }

    public function connect(?string $hostname = null, ?string $username = null, ?string $password = null, ?string $database = null, ?int $port = null, ?string $socket = null): bool
    {
        $this->loadConfig($hostname, $username, $password, $database, $port);
        return parent::connect($this->HOST, $this->USER, $this->PASS, $this->Name, $this->PORT, $socket); // TODO: Change the autogenerated stub

    }

    private function loadConfig(?string $hostname = null, ?string $username = null, ?string $password = null, ?string $database = null, ?int $port = null): void
    {
        if(is_null($this->config)){
            $conf = new Config();
            $conf->config = (array) $conf->config["DB"];
            $this->config = $conf->config;
            $this->HOST = $hostname??$this->config["DB_HOST"];
            $this->USER = $username??$this->config["DB_USER"];
            $this->PASS = $password??$this->config["DB_PASS"];
            $this->Name = $database??$this->config["DB_NAME"];
            $this->PORT = $port??$this->config["DB_PORT"];
        }
        if(is_null($this->HOST) || !is_null($hostname)){
            $this->HOST = $hostname??$this->config["DB_HOST"];
        }
        if(is_null($this->USER) || !is_null($username)){
            $this->USER = $username??$this->config["DB_USER"];
        }
        if(is_null($this->PASS) || !is_null($password)){
            $this->PASS = $password??$this->config["DB_PASS"];
        }
        if(is_null($this->Name) || !is_null($database)){
            $this->Name = $database??$this->config["DB_NAME"];
        }
        if(is_null($this->PORT) || !is_null($port)){
            $this->PORT = $port??$this->config["DB_PORT"];
        }
    }

    public function __destruct()
    {

        parent::close();// TODO: Implement __destruct() method.
    }
}